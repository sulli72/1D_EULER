function [RMAT,LMAT,LAMS] = PRIM2CHAR(qc0,qp1,g,ii)
% Inputs: states at i, i+1 grid pts
% Outputs: right and left eigenvectors, eigenvalues for char variable
% mapping about pt i

rl=qc0(1);
ul=qc0(2)/rl;
El=qc0(3);

rr=qp1(1);   
ur=qp1(2)/rr;   
Er=qp1(3);   

gm1=g-1;

pr=(Er-0.5*rr*ur^2)*gm1;
Hr = Er + pr;
htr = Hr/rr;

pl=(El-0.5*rl*ul^2)*gm1;
Hl = El + pl;
htl = Hl/rl;

ravg=sqrt(rr*rl);
uavg=(sqrt(rr)*ur + sqrt(rl)*ul)/(sqrt(rr)+sqrt(rl));
havg=(sqrt(rr)*htr + sqrt(rl)*htl)/(sqrt(rr)+sqrt(rl));
cavg=sqrt(gm1*(havg-0.5*uavg^2));


if ii==51
  db=1;
end

% Construct matrix of left eigenvectors
%                          _                                       _
%                         |                                         |
%                         |  uc/(gamma-1)+u^2/2  -c/(gamma-1)-u   1 |
%                         |                                         |
% R^{-1}=(gamma-1)/(2c^2)*|  2(H-u^2)             2u             -2 |
%                         |                                         |
%                         | -uc/(gamma-1)+u^2/2   c/(gamma-1)-u   1 |
%                         |_                                       _|


ic = gm1/(2*cavg^2);

l1 = [uavg*cavg/gm1 + 0.5*uavg^2 2*(havg-uavg^2) -uavg*cavg/gm1 + 0.5*uavg^2]';

l2 = [-cavg/gm1 - uavg  2*uavg  cavg/gm1-uavg]';

l3 = [1 -2 1]';

LMAT=[l1 l2 l3];
LMAT=ic*LMAT;





% ic=gm1/(ravg*cavg);
% 
% rbc=ravg/cavg;
% csqgm1=(cavg^2)/gm1;
% huu=0.5*uavg*uavg;
% cgm1=cavg/gm1;
% cgm1uu=(cavg/gm1)*uavg*uavg;
% 
% l11 = rbc*(csqgm1 - huu);
% l12 = huu - cgm1uu;
% l13 = -huu-cgm1uu;
% 
% l1 = [l11 l12 l13]';
% 
% l2 = [rbc*uavg cgm1-uavg cgm1+uavg]';
% 
% l3 = [-rbc 1 -1]';
% 
% LMAT=[l1 l2 l3];
% LMAT=ic*LMAT;

% l1=l1/norm(l1);
% l2=l2/norm(l2);
% l3=l3/norm(l3);
% LMAT=[l1 l2 l3];

% Follows Shu High Order ENO paper (1992)
% b1=gm1/cavg^2;
% b2=0.5*b1*uavg^2;
% l1 = [b2+uavg/cavg 2*(1-b2) (b2-uavg/cavg)]';
% l2 = [b1*uavg+1/cavg 2*b1*uavg -(b1*uavg - 1/cavg)]';
% l3 = [b1 -2*b1 b1]';
% LMAT = 0.5*[l2 l3 l1];
% % LMAT = LMAT';

% Construct matrix of right eigenvectors
%      _                    _
%     |                      |
%     |   1      1       1   |
%     |                      |
% R = |  u-c     u      u+c  |
%     |                      |
%     |  H-uc   u^2/2   H+uc |
%     |_                    _|
rc=ravg/(2*cavg);

r1 = [1  uavg-cavg  havg-uavg*cavg]';
r2 = [1 uavg 0.5*uavg^2]';
r3 = [1 uavg+cavg havg+uavg*cavg]';

RMAT = [r1 r2 r3];

%%% NORMALIZED EIGENVECTOR CASE
% r1 = [1 uavg 0.5*uavg^2]';
% r2 = rc*[ 1 uavg+cavg havg+uavg*cavg]';
% r3 = rc*[-1 -uavg+cavg  -havg+uavg*cavg]';

% r1=r1/norm(r1);
% r2=r2/norm(r2);
% r3=r3/norm(r3);

% r1 = -rc*[1 uavg-cavg havg-uavg*cavg]';
% r2 = [1 uavg 0.5*uavg^2]';
% r3 = rc*[ 1 uavg+cavg havg+uavg*cavg]';
% RMAT = [r1 r2 r3];

%% ==== READ THIS === %%
% fprintf(1,'-------- IMPORTANT --------\n')
% fprintf(1,'NEED TO ENSURE EACH EIGENVECTOR AND EIGENVALUE IS LINED UP PROPERLY IN THIS PRIM2CHAR ROUNTINE\n')
% fprintf(1,'-------- IMPORTANT --------\n')
% fprintf(1,'LOOK AT CALEY BOOK OR SOMETHING')
% 3 1D Euler equation eigenvalues

% === NEED TO ENTROPY FIX THE EIGENVALUES === %

lam3=uavg+cavg;
lam2=uavg;
lam1=uavg-cavg;


%% Entropy fix
eps=.05;
mxwv=abs(uavg)+cavg;
h=eps*mxwv;

l1fix=0.5*((lam1^2)/h +h);
l2fix=0.5*((lam1^2)/h +h)
l3fix=0.5*((lam1^2)/h +h)

LAMS=[lam1 lam2 lam3];


if ii==21
  db=1;
end

db=1;



end
